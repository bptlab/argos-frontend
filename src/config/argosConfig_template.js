export const argosConfig = {
    useBackendMock:                 false,
    sameServer:                     true,
    backendHost:                    'localhost',
    backendPort:                    8989,
    backendNotificationAPI:         'argosTT/notifications',
    enumerationSymbol:              '#',
    searchPlaceholder:              'Search...',
    kindOfChart:                    'doughnut',
    kindOfDetailChart:              'line',
    dashboardName:                  'Early Warning Dashboard',
    webSocketProtocol:              'wss',
    messageSuccessConnectionPush:   'Successfully connected to Push-Notification-Service',
    messageLostConnectionPush:      'Connection to Push-Notification-Service lost / not possible',
    messageErrorConnectionPush:     'Error on Push-Notification-Service',
    NotificationServiceSuccess:     'success',
    NotificationServiceError:       'danger',
    NotificationServiceNeutralInfo: 'info',
    RESTInterfaceRouteError:        'Wrong route specified',
    RESTInterfaceConnectionError:   'A critical connection error occurred!',
    routeNameDetailView:            'product',
    tableHeaderDescriptionDelete:   'Delete?',
    eventTypeAddHint:               'To add a new Event-Type please refer to a Product and press the "Plus"-Button.',
    errorMessage403:                'Your are not allowed to modify this Event-Type',
    errorRemainingDependencies:     'You can not delete this Event-Type, because of existing dependencies',
    messageSuccessEventTypeCreation:'EventType sucessfully created.',
    createEventTypeDefaultQuery:    'INSERT INTO TestErrorEvents SELECT timestamp, productId, ' +
                                    'productFamilyId FROM FeedbackData',
    formValidationNoEmptyMessage:   'This field can\'t be empty.',
    runningStateName:               'running',
    warningStateName:               'warning',
    errorStateName:                 'error',
    runningStateColor:              '#9FAB61',
    runningStateTransparentColor:   'rgba(159, 171, 97, 0.4)',
    warningStateColor:              '#EF9D6E',
    warningStateTransparentColor:   'rgba(239, 157, 110, 0.4)',
    errorStateColor:                '#D33F49',
    errorStateTransparentColor:     'rgba(211, 63, 73, 0.4)',
    undefinedStateColor:            '#666666',
    undefinedStateTransparentColor: 'rgba(102, 102, 102, 0.4)',
    eventQueryInterfaceTooltip:     'Click to create new event type',
};
